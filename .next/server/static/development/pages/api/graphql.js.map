{"version":3,"file":"static/development/pages/api/graphql.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/api/graphql.js","webpack:///./server/database/config.js","webpack:///./server/database/models/GlobalConfig.js","webpack:///./server/database/models/Product.js","webpack:///./server/resolvers/Mutation.js","webpack:///./server/resolvers/Query.js","webpack:///./server/schema/config.js","webpack:///./server/schema/mutation.js","webpack:///./server/schema/product.js","webpack:///./server/schema/query.js","webpack:///./server/schema/setup.js","webpack:///external \"apollo-server-micro\"","webpack:///external \"mongoose\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import { ApolloServer } from 'apollo-server-micro';\n\nrequire('../../server/database/config');\n\n//Resolvers\nconst Query = require('../../server/resolvers/Query');\nimport Mutation from '../../server/resolvers/Mutation';\n\n// Schema\nconst { query } = require('../../server/schema/query');\nimport { mutation } from '../../server/schema/mutation';\nconst { product } = require('../../server/schema/product');\nconst { setup } = require('../../server/schema/setup');\nconst { config: globalConfig } = require('../../server/schema/config');\n\nconst resolvers = {\n  Query,\n  Mutation,\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs: [query, mutation, globalConfig, product, setup],\n  resolvers,\n});\n\nconst handler = apolloServer.createHandler({ path: '/api/graphql' });\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default handler;\n","const mongoose = require('mongoose');\n\nmongoose.Promise = global.Promise;\n\nconst url = 'mongodb://localhost:27017/orijinator_lp';\n\nmongoose.connect(url, {\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n});\n\nmongoose.connection.once('open', err => {\n  if (err) return err;\n\n  console.log(`Connected to mongo at ${url}`);\n});\n","const mongoose = require('mongoose');\n\nconst { Schema } = mongoose;\n\nconst globalConfigSchema = new Schema(\n  {\n    businessName: String,\n    fullName: String,\n  },\n  { collection: 'global_config' }\n);\n\nglobal.globalConfigSchema =\n  global.globalConfigSchema || mongoose.model('Config', globalConfigSchema);\n\nmodule.exports = global.globalConfigSchema;\n","const mongoose = require('mongoose');\n\nconst { Schema } = mongoose;\n\nconst ProductSchema = new Schema(\n  {\n    title: String,\n    price: Number,\n    inventory: Number,\n  },\n  { collection: 'products' }\n);\n\nProductSchema.path('price').get(function (num) {\n  return (num / 100).toFixed(2);\n});\n\nProductSchema.path('price').set(function (num) {\n  return num * 100;\n});\n\nglobal.ProductSchema =\n  global.ProductSchema || mongoose.model('Product', ProductSchema);\n\nmodule.exports = global.ProductSchema;\n","const Config = require('../database/models/GlobalConfig');\nconst Product = require('../database/models/Product');\n\nrunSetup = (_parent, _args, _context) => {\n  // Creation of collection and documents\n  // const newConfig = new Config({ shipping: 4.25, price: 7 });\n\n  const newConfig = new Config({\n    businessName: 'Ice Cream Shop',\n    fullName: 'Michael Camacho',\n  });\n\n  newConfig.save();\n\n  return { success: _args.success };\n};\n\naddProduct = async (_parent, _args, _context) => {\n  try {\n    const response = await Product.create(_args);\n\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nupdatePrice = async (_parent, _args, _context) => {\n  try {\n    const { _id: id, price } = await Config.findOneAndUpdate(\n      { _id: '5e815e862e2e6a0bfbf96f1d' },\n      { price: _args.price },\n      { new: true }\n    );\n\n    return { id, price };\n  } catch (error) {\n    return error;\n  }\n};\n\nmodule.exports = {\n  runSetup,\n  addProduct,\n  updatePrice,\n};\n","const Config = require('../database/models/GlobalConfig');\nconst Product = require('../database/models/Product');\n\ngetProducts = async (_parent, _args, _context) => {\n  try {\n    const response = await Product.find();\n\n    return response;\n  } catch (err) {\n    return err;\n  }\n};\n\n// getProduct = async (_parent, _args, _context) => {\n//   try {\n//     const response = await Config.find();\n\n//     if (response.length === 0) throw Error('Collection does not exist.');\n\n//     return response[0];\n//   } catch (err) {\n//     return err;\n//   }\n// };\n\ngetGlobalConfig = async (_parent, _args, _context) => {\n  try {\n    const response = await Config.find();\n\n    if (response.length === 0) throw Error('Collection does not exist.');\n\n    return response[0];\n  } catch (err) {\n    return err;\n  }\n};\n\nmodule.exports = {\n  getProducts,\n  getGlobalConfig,\n};\n","import { gql } from 'apollo-server-micro';\n\nconst config = gql`\n  type Config {\n    businessName: String\n    fullName: String\n  }\n`;\n\nmodule.exports = {\n  config,\n};\n","import { gql } from 'apollo-server-micro';\n\nconst mutation = gql`\n  type Mutation {\n    runSetup(success: Boolean): Setup\n    updatePrice(price: Float): Product\n    addProduct(title: String, price: Float, inventory: Int): Product\n  }\n`;\n\nmodule.exports = {\n  mutation,\n};\n","import { gql } from 'apollo-server-micro';\n\nconst product = gql`\n  type Product {\n    id: ID\n    title: String\n    price: Float\n    inventory: Int\n  }\n`;\n\nmodule.exports = {\n  product,\n};\n","import { gql } from 'apollo-server-micro';\n\n// Query Schema\nconst query = gql`\n  type Query {\n    getProducts: [Product]\n    getGlobalConfig: Config\n  }\n`;\n\nmodule.exports = {\n  query,\n};\n","import { gql } from 'apollo-server-micro';\n\nconst setup = gql`\n  type Setup {\n    success: Boolean\n  }\n`;\n\nmodule.exports = {\n  setup\n};\n","module.exports = require(\"apollo-server-micro\");","module.exports = require(\"mongoose\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AADA;AAMA;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAIA;AAAA;AAGA;AAGA;;;;;;;;;;;ACfA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;;;;;;;;;;;ACxBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;;;;;;;;;;;ACzCA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;;ACrCA;AACA;AACA;;;;;AAAA;AAOA;AACA;AADA;;;;;;;;;;;;;;ACTA;AACA;AACA;;;;;;AAAA;AAQA;AACA;AADA;;;;;;;;;;;;;;ACVA;AACA;AACA;;;;;;;AAAA;AASA;AACA;AADA;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;;;;;AAAA;AAOA;AACA;AADA;;;;;;;;;;;;;;ACVA;AACA;AACA;;;;AAAA;AAMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}