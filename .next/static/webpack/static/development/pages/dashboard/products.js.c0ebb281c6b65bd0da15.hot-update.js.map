{"version":3,"file":"static/webpack/static/development/pages/dashboard/products.js.c0ebb281c6b65bd0da15.hot-update.js","sources":["webpack:///./components/Ui/Animation/FadeIn.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { TweenMax } from 'gsap';\n\nexport interface FadeInProps {\n  isTableRow?: boolean;\n  children: any;\n  animateId: string;\n}\n\nconst FadeIn: React.SFC<FadeInProps> = ({ isTableRow = false, children, animateId }) => {\n  useEffect(() => {\n    TweenMax.staggerFromTo(`.animate-${animateId}`, 0.5, { y: 10, opacity: 0 }, { y: 0, opacity: 1 }, 0.2);\n  });\n\n  if (isTableRow)\n    return (\n      <tr className=\"animate\">\n        {children}\n        <style jsx>{`\n          .animate-${animateId} {\n            opacity: 0;\n          }\n        `}</style>\n      </tr>\n    );\n\n  return (\n    <div className=\"animate\">\n      {children}\n      <style jsx>{`\n        .animate-${animateId} {\n          opacity: 0;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default FadeIn;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}