{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { v4 as uuid } from 'uuid';\nexport var submitPrice = function submitPrice(updater, query, price) {\n  updater({\n    variables: {\n      price: price\n    },\n    optimisticResponse: {\n      __type: 'Mutation',\n      updatePrice: {\n        __typename: 'Product',\n        id: uuid(),\n        price: price\n      }\n    },\n    update: function update(cache, _ref) {\n      var updatePrice = _ref.data.updatePrice;\n      var data = cache.readQuery({\n        query: query\n      });\n      cache.writeQuery({\n        query: query,\n        data: _objectSpread({}, data, {\n          getProduct: _objectSpread({}, data.getProduct, {\n            updatePrice: updatePrice\n          })\n        })\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/utils/price.ts"],"names":["v4","uuid","submitPrice","updater","query","price","variables","optimisticResponse","__type","updatePrice","__typename","id","update","cache","data","readQuery","writeQuery","getProduct"],"mappings":";;;;;;AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAeC,KAAf,EAA2BC,KAA3B,EAA6C;AACtEF,EAAAA,OAAO,CAAC;AACNG,IAAAA,SAAS,EAAE;AAAED,MAAAA,KAAK,EAALA;AAAF,KADL;AAENE,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE,UADU;AAElBC,MAAAA,WAAW,EAAE;AACXC,QAAAA,UAAU,EAAE,SADD;AAEXC,QAAAA,EAAE,EAAEV,IAAI,EAFG;AAGXI,QAAAA,KAAK,EAALA;AAHW;AAFK,KAFd;AAUNO,IAAAA,MAAM,EAAE,gBAACC,KAAD,QAAsC;AAAA,UAApBJ,WAAoB,QAA5BK,IAA4B,CAApBL,WAAoB;AAC5C,UAAMK,IAAS,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAChCX,QAAAA,KAAK,EAALA;AADgC,OAAhB,CAAlB;AAIAS,MAAAA,KAAK,CAACG,UAAN,CAAiB;AACfZ,QAAAA,KAAK,EAALA,KADe;AAEfU,QAAAA,IAAI,oBACCA,IADD;AAEFG,UAAAA,UAAU,oBAAOH,IAAI,CAACG,UAAZ;AAAwBR,YAAAA,WAAW,EAAXA;AAAxB;AAFR;AAFW,OAAjB;AAOD;AAtBK,GAAD,CAAP;AAwBD,CAzBM","sourcesContent":["import { v4 as uuid } from 'uuid';\n\nexport const submitPrice = (updater: any, query: any, price: number) => {\n  updater({\n    variables: { price },\n    optimisticResponse: {\n      __type: 'Mutation',\n      updatePrice: {\n        __typename: 'Product',\n        id: uuid(),\n        price,\n      },\n    },\n    update: (cache, { data: { updatePrice } }) => {\n      const data: any = cache.readQuery({\n        query,\n      });\n\n      cache.writeQuery({\n        query,\n        data: {\n          ...data,\n          getProduct: { ...data.getProduct, updatePrice },\n        },\n      });\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}