{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const submitPrice = (updater, query) => {\n  updater({\n    variables: {\n      price: state.price\n    },\n    optimisticResponse: {\n      __type: 'Mutation',\n      updatePrice: {\n        __typename: 'Product',\n        id: uuid(),\n        price: state.price\n      }\n    },\n    update: (cache, {\n      data: {\n        updatePrice\n      }\n    }) => {\n      const data = cache.readQuery({\n        query: QUERY_PRODUCT_PRICE\n      });\n      cache.writeQuery({\n        query: QUERY_PRODUCT_PRICE,\n        data: _objectSpread({}, data, {\n          getProduct: _objectSpread({}, data.getProduct, {\n            updatePrice\n          })\n        })\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/utils/price.ts"],"names":["submitPrice","updater","query","variables","price","state","optimisticResponse","__type","updatePrice","__typename","id","uuid","update","cache","data","readQuery","QUERY_PRODUCT_PRICE","writeQuery","getProduct"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,OAAD,EAAeC,KAAf,KAA8B;AACvDD,EAAAA,OAAO,CAAC;AACNE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEC,KAAK,CAACD;AAAf,KADL;AAENE,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE,UADU;AAElBC,MAAAA,WAAW,EAAE;AACXC,QAAAA,UAAU,EAAE,SADD;AAEXC,QAAAA,EAAE,EAAEC,IAAI,EAFG;AAGXP,QAAAA,KAAK,EAAEC,KAAK,CAACD;AAHF;AAFK,KAFd;AAUNQ,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAEN,QAAAA;AAAF;AAAR,KAAR,KAAsC;AAC5C,YAAMM,IAAS,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAChCb,QAAAA,KAAK,EAAEc;AADyB,OAAhB,CAAlB;AAIAH,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACff,QAAAA,KAAK,EAAEc,mBADQ;AAEfF,QAAAA,IAAI,oBACCA,IADD;AAEFI,UAAAA,UAAU,oBAAOJ,IAAI,CAACI,UAAZ;AAAwBV,YAAAA;AAAxB;AAFR;AAFW,OAAjB;AAOD;AAtBK,GAAD,CAAP;AAwBD,CAzBM","sourcesContent":["export const submitPrice = (updater: any, query: any) => {\n  updater({\n    variables: { price: state.price },\n    optimisticResponse: {\n      __type: 'Mutation',\n      updatePrice: {\n        __typename: 'Product',\n        id: uuid(),\n        price: state.price,\n      },\n    },\n    update: (cache, { data: { updatePrice } }) => {\n      const data: any = cache.readQuery({\n        query: QUERY_PRODUCT_PRICE,\n      });\n\n      cache.writeQuery({\n        query: QUERY_PRODUCT_PRICE,\n        data: {\n          ...data,\n          getProduct: { ...data.getProduct, updatePrice },\n        },\n      });\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}