{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      getProduct @client {\\n        id\\n        price\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT_PRICE, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nvar Dashboard = function Dashboard() {\n  var _useState = useState([]),\n      notifications = _useState[0],\n      updateNotifications = _useState[1]; // Querys\n\n\n  var _useQuery = useQuery(QUERY_PRODUCT_PRICE, {\n    onError: function onError(error) {\n      console.log(error);\n    },\n    onCompleted: function onCompleted(data) {\n      var price = data.getProduct.price;\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data; // Mutations\n\n\n  var _useMutation = useMutation(MUTATION_PRICE, {\n    onError: function onError(error) {\n      console.log(error);\n    },\n    onCompleted: function onCompleted() {\n      addNotification('Notification', \"Your price has been updated to $\".concat(localData.getProduct.price.toFixed(2)), 'info', notifications, updateNotifications);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updatePrice = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      MutationUpdatePriceLoading = _useMutation2$.loading,\n      MutationUpdatePriceError = _useMutation2$.error; // Local Methods\n\n\n  var removeNotification = function removeNotification(id) {\n    var data = notifications;\n    var toasts = data.filter(function (item) {\n      return item.id !== id;\n    });\n    updateNotifications(toasts);\n  };\n\n  var client = useApolloClient();\n\n  var onChangeMe = function onChangeMe(e) {\n    var price = parseFloat(e.target.value);\n    client.writeQuery({\n      query: QUERY_PRODUCT,\n      data: {\n        getProduct: {\n          id: '123',\n          price: price,\n          __typename: 'Product'\n        }\n      }\n    });\n  };\n\n  if (loading) {\n    return __jsx(Growing, {\n      visible: true,\n      fullScreen: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    type: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Network Error.\"));\n  var price = data.getProduct.price;\n  var QUERY_PRODUCT = gql(_templateObject());\n\n  var _useQuery2 = useQuery(QUERY_PRODUCT),\n      localData = _useQuery2.data;\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    allToasts: notifications,\n    removeNotification: removeNotification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mb-3 col-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Item Price: \", localData.getProduct.price.toFixed(2)), __jsx(\"form\", {\n    onSubmit: function onSubmit() {\n      return event.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, __jsx(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, __jsx(InputPrice, {\n    onChange: onChangeMe,\n    labelTitle: \"Item Price\",\n    price: localData.getProduct.price.toFixed(2),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    submitPrice: submitPrice,\n    updatePrice: updatePrice,\n    query: QUERY_PRODUCT_PRICE,\n    mutateLoading: MutationUpdatePriceLoading,\n    price: localData.getProduct.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, __jsx(Growing, {\n    visible: MutationUpdatePriceLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), MutationUpdatePriceLoading ? ' Loading...' : 'Update', MutationUpdatePriceError ? 'Network error occured.' : ''))))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","useQuery","useMutation","QUERY_PRODUCT_PRICE","MUTATION_PRICE","addNotification","submitPrice","ToastContainer","Card","CardBody","CardTitle","FormGroup","InputPrice","Button","Growing","Alert","useApolloClient","gql","Dashboard","notifications","updateNotifications","onError","error","console","log","onCompleted","data","price","getProduct","loading","localData","toFixed","updatePrice","MutationUpdatePriceLoading","MutationUpdatePriceError","removeNotification","id","toasts","filter","item","client","onChangeMe","e","parseFloat","target","value","writeQuery","query","QUERY_PRODUCT","__typename","event","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT_PRICE, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { InputPriceProps } from '../components/Form/InputPrice';\n\nexport interface DashboardState {\n  price: number;\n}\n\ninterface ProductInventoryData {\n  getProduct: ProductInventory;\n}\n\ninterface ProductInventory {\n  price: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [notifications, updateNotifications] = useState([]);\n\n  // Querys\n  const { loading, error, data } = useQuery<ProductInventoryData>(\n    QUERY_PRODUCT_PRICE,\n    {\n      onError: (error) => {\n        console.log(error);\n      },\n      onCompleted: (data) => {\n        const {\n          getProduct: { price },\n        } = data;\n      },\n    }\n  );\n\n  // Mutations\n  const [\n    updatePrice,\n    { loading: MutationUpdatePriceLoading, error: MutationUpdatePriceError },\n  ] = useMutation(MUTATION_PRICE, {\n    onError: (error) => {\n      console.log(error);\n    },\n    onCompleted: () => {\n      addNotification(\n        'Notification',\n        `Your price has been updated to $${localData.getProduct.price.toFixed(\n          2\n        )}`,\n        'info',\n        notifications,\n        updateNotifications\n      );\n    },\n  });\n\n  // Local Methods\n  const removeNotification = (id: number) => {\n    const data = notifications;\n    const toasts = data.filter((item): any => item.id !== id);\n\n    updateNotifications(toasts);\n  };\n\n  const client = useApolloClient();\n\n  const onChangeMe = (e) => {\n    const price = parseFloat(e.target.value);\n\n    client.writeQuery({\n      query: QUERY_PRODUCT,\n      data: {\n        getProduct: { id: '123', price, __typename: 'Product' },\n      },\n    });\n  };\n\n  if (loading) {\n    return <Growing visible={true} fullScreen={true} />;\n  }\n\n  if (error)\n    return (\n      <div className=\"container\">\n        <Alert type=\"danger\">Network Error.</Alert>\n      </div>\n    );\n\n  const {\n    getProduct: { price },\n  } = data;\n\n  const QUERY_PRODUCT = gql`\n    query {\n      getProduct @client {\n        id\n        price\n      }\n    }\n  `;\n\n  const { data: localData } = useQuery(QUERY_PRODUCT);\n\n  return (\n    <div className=\"container\">\n      {/* {console.log(localData)} */}\n      <ToastContainer\n        allToasts={notifications}\n        removeNotification={removeNotification}\n      />\n      <div className=\"row align-items-center\">\n        <div className=\"p-3 mb-3 col-3\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                Item Price: {localData.getProduct.price.toFixed(2)}\n              </CardTitle>\n              <form onSubmit={() => event.preventDefault()}>\n                <FormGroup>\n                  <InputPrice\n                    onChange={onChangeMe}\n                    labelTitle=\"Item Price\"\n                    price={localData.getProduct.price.toFixed(2)}\n                  />\n                  <Button\n                    submitPrice={submitPrice}\n                    updatePrice={updatePrice}\n                    query={QUERY_PRODUCT_PRICE}\n                    mutateLoading={MutationUpdatePriceLoading}\n                    price={localData.getProduct.price}\n                  >\n                    <Growing visible={MutationUpdatePriceLoading} />\n                    {MutationUpdatePriceLoading ? ' Loading...' : 'Update'}\n                    {MutationUpdatePriceError ? 'Network error occured.' : ''}\n                  </Button>\n                </FormGroup>\n              </form>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}