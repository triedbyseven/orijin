{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation runSetup($type: String!) {\\n    runSetUp(type: $type) {\\n      id\\n      type\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar RUN_SETUP = gql(_templateObject());\n\nvar Setup = function Setup() {\n  var _useState = useState(true),\n      state = _useState[0],\n      updateState = _useState[1];\n\n  var _useMutation = useMutation(RUN_SETUP),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      runSetup = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"SetUp Page\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return runSetup();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Run SetUp\"));\n};\n\nexport default Setup;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx"],"names":["React","useState","useMutation","gql","RUN_SETUP","Setup","state","updateState","runSetup","data"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAIA,IAAMC,SAAS,GAAGD,GAAH,mBAAf;;AASA,IAAME,KAA2B,GAAG,SAA9BA,KAA8B,GAAM;AAAA,kBACXJ,QAAQ,CAAC,IAAD,CADG;AAAA,MACjCK,KADiC;AAAA,MAC1BC,WAD0B;;AAAA,qBAEXL,WAAW,CAACE,SAAD,CAFA;AAAA;AAAA,MAEjCI,QAFiC;AAAA,MAErBC,IAFqB,oBAErBA,IAFqB;;AAIxC,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,EAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAYD,CAhBD;;AAkBA,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface SetupProps {}\n\nconst RUN_SETUP = gql`\n  mutation runSetup($type: String!) {\n    runSetUp(type: $type) {\n      id\n      type\n    }\n  }\n`;\n\nconst Setup: React.FC<SetupProps> = () => {\n  const [state, updateState] = useState(true);\n  const [runSetup, { data }] = useMutation(RUN_SETUP);\n\n  return (\n    <div className=\"container\">\n      <h1>SetUp Page</h1>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => runSetup()}\n      >\n        Run SetUp\n      </button>\n    </div>\n  );\n};\n\nexport default Setup;\n"]},"metadata":{},"sourceType":"module"}