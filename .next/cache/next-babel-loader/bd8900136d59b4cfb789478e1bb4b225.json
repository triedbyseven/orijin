{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useState } from 'react';\nimport ToastContainer from '../components/ToastContainer';\nimport gql from 'graphql-tag';\n\nconst Dashboard = () => {\n  const {\n    0: notifications,\n    1: updateNotifications\n  } = useState([]);\n  const QUERY_GLOBAL_CONFIG = gql`\n    query {\n      getGlobalConfig {\n        businessName\n        fullName\n      }\n    }\n  `; // const { loading, error, data } = useQuery(QUERY_GLOBAL_CONFIG);\n  // Local Methods\n\n  const removeNotification = id => {\n    const data = notifications;\n    const toasts = data.filter(item => item.id !== id);\n    updateNotifications(toasts);\n  }; // if (loading) {\n  //   return <Growing visible={true} fullScreen={true} />;\n  // }\n  // if (error)\n  //   return (\n  //     <div className=\"container\">\n  //       <Alert type=\"danger\">Network Error.</Alert>\n  //     </div>\n  //   );\n\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    allToasts: notifications,\n    removeNotification: removeNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mb-3 col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","ToastContainer","gql","Dashboard","notifications","updateNotifications","QUERY_GLOBAL_CONFIG","removeNotification","id","data","toasts","filter","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAGA,OAAOC,GAAP,MAAgB,aAAhB;;AAcA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAuCL,QAAQ,CAAC,EAAD,CAArD;AAEA,QAAMM,mBAAmB,GAAGJ,GAAI;;;;;;;GAAhC,CAHgC,CAYhC;AAEA;;AACA,QAAMK,kBAAkB,GAAIC,EAAD,IAAgB;AACzC,UAAMC,IAAI,GAAGL,aAAb;AACA,UAAMM,MAAM,GAAGD,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAeA,IAAI,CAACJ,EAAL,KAAYA,EAAvC,CAAf;AAEAH,IAAAA,mBAAmB,CAACK,MAAD,CAAnB;AACD,GALD,CAfgC,CAsBhC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,cAAD;AACE,IAAA,SAAS,EAAEN,aADb;AAEE,IAAA,kBAAkB,EAAEG,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAYD,CA7CD;;AA+CA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ToastContainer from '../components/ToastContainer';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport gql from 'graphql-tag';\n\nexport interface DashboardState {\n  price: number;\n}\n\ninterface ProductInventoryData {\n  getProduct: ProductInventory;\n}\n\ninterface ProductInventory {\n  price: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [notifications, updateNotifications] = useState([]);\n\n  const QUERY_GLOBAL_CONFIG = gql`\n    query {\n      getGlobalConfig {\n        businessName\n        fullName\n      }\n    }\n  `;\n\n  // const { loading, error, data } = useQuery(QUERY_GLOBAL_CONFIG);\n\n  // Local Methods\n  const removeNotification = (id: number) => {\n    const data = notifications;\n    const toasts = data.filter((item): any => item.id !== id);\n\n    updateNotifications(toasts);\n  };\n\n  // if (loading) {\n  //   return <Growing visible={true} fullScreen={true} />;\n  // }\n\n  // if (error)\n  //   return (\n  //     <div className=\"container\">\n  //       <Alert type=\"danger\">Network Error.</Alert>\n  //     </div>\n  //   );\n\n  return (\n    <div className=\"container\">\n      {/* {console.log(data)} */}\n      <ToastContainer\n        allToasts={notifications}\n        removeNotification={removeNotification}\n      />\n      <div className=\"row align-items-center\">\n        <div className=\"p-3 mb-3 col-3\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}