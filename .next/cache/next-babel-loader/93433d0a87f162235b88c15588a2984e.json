{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_GLOBAL_CONFIG } from '../graphql';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\n\nconst Dashboard = () => {\n  const {\n    0: notifications,\n    1: updateNotifications\n  } = useState([]); // Querys\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_GLOBAL_CONFIG, {\n    onError: error => {\n      console.log(error);\n    },\n    onCompleted: data => {\n      // const {\n      //   getProduct: { price },\n      // } = data;\n      console.log('QUERY_GLOBAL_CONFIG Completed!');\n    }\n  }); // Mutations\n  // const [\n  //   updatePrice,\n  //   { loading: MutationUpdatePriceLoading, error: MutationUpdatePriceError },\n  // ] = useMutation(MUTATION_PRICE, {\n  //   onError: (error) => {\n  //     console.log(error);\n  //   },\n  //   onCompleted: () => {\n  //     addNotification(\n  //       'Notification',\n  //       // `Your price has been updated to $${state.price.toFixed(2)}`,\n  //       `Your price has been updated to $0`,\n  //       'info',\n  //       notifications,\n  //       updateNotifications\n  //     );\n  //   },\n  // });\n  // Local Methods\n\n  const removeNotification = id => {\n    const data = notifications;\n    const toasts = data.filter(item => item.id !== id);\n    updateNotifications(toasts);\n  };\n\n  const onChangeMe = e => {\n    const price = parseFloat(e.target.value); // updateState({ price });\n  };\n\n  if (loading) {\n    return __jsx(Growing, {\n      visible: true,\n      fullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    type: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Network Error.\"));\n  const {\n    getGlobalConfig: {\n      businessName,\n      fullName\n    }\n  } = data;\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    allToasts: notifications,\n    removeNotification: removeNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mb-3 col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, businessName), __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, fullName))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","useQuery","QUERY_GLOBAL_CONFIG","ToastContainer","Card","CardBody","CardTitle","Growing","Alert","Dashboard","notifications","updateNotifications","loading","error","data","onError","console","log","onCompleted","removeNotification","id","toasts","filter","item","onChangeMe","e","price","parseFloat","target","value","getGlobalConfig","businessName","fullName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_GLOBAL_CONFIG, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\n\ninterface GetGlobalConfigData {\n  getGlobalConfig: ProductInventory;\n}\n\ninterface ProductInventory {\n  businessName: string;\n  fullName: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [notifications, updateNotifications] = useState([]);\n\n  // Querys\n  const { loading, error, data } = useQuery<GetGlobalConfigData>(\n    QUERY_GLOBAL_CONFIG,\n    {\n      onError: (error) => {\n        console.log(error);\n      },\n      onCompleted: (data) => {\n        // const {\n        //   getProduct: { price },\n        // } = data;\n        console.log('QUERY_GLOBAL_CONFIG Completed!');\n      },\n    }\n  );\n\n  // Mutations\n  // const [\n  //   updatePrice,\n  //   { loading: MutationUpdatePriceLoading, error: MutationUpdatePriceError },\n  // ] = useMutation(MUTATION_PRICE, {\n  //   onError: (error) => {\n  //     console.log(error);\n  //   },\n  //   onCompleted: () => {\n  //     addNotification(\n  //       'Notification',\n  //       // `Your price has been updated to $${state.price.toFixed(2)}`,\n  //       `Your price has been updated to $0`,\n  //       'info',\n  //       notifications,\n  //       updateNotifications\n  //     );\n  //   },\n  // });\n\n  // Local Methods\n  const removeNotification = (id: number) => {\n    const data = notifications;\n    const toasts = data.filter((item): any => item.id !== id);\n\n    updateNotifications(toasts);\n  };\n\n  const onChangeMe = (e) => {\n    const price = parseFloat(e.target.value);\n\n    // updateState({ price });\n  };\n\n  if (loading) {\n    return <Growing visible={true} fullScreen={true} />;\n  }\n\n  if (error)\n    return (\n      <div className=\"container\">\n        <Alert type=\"danger\">Network Error.</Alert>\n      </div>\n    );\n\n  const {\n    getGlobalConfig: { businessName, fullName },\n  } = data;\n\n  return (\n    <div className=\"container\">\n      <ToastContainer\n        allToasts={notifications}\n        removeNotification={removeNotification}\n      />\n      <div className=\"row align-items-center\">\n        <div className=\"p-3 mb-3 col-3\">\n          <Card>\n            <CardBody>\n              <CardTitle>{businessName}</CardTitle>\n              <CardTitle>{fullName}</CardTitle>\n              {/* <CardTitle>Item Price: {price.toFixed(2)}</CardTitle> */}\n              {/* <form onSubmit={() => event.preventDefault()}>\n                <FormGroup>\n                  <InputPrice\n                    onChange={onChangeMe}\n                    labelTitle=\"Item Price\"\n                    // price={state.price.toFixed(2)}\n                    price=\"2\"\n                  />\n                  <Button\n                    submitPrice={submitPrice}\n                    updatePrice={updatePrice}\n                    query={QUERY_PRODUCT_PRICE}\n                    mutateLoading={MutationUpdatePriceLoading}\n                    state={state}\n                    data={price}\n                  >\n                    <Growing visible={MutationUpdatePriceLoading} />\n                    {MutationUpdatePriceLoading ? ' Loading...' : 'Update'}\n                    {MutationUpdatePriceError ? 'Network error occured.' : ''}\n                  </Button>\n                </FormGroup>\n              </form> */}\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}