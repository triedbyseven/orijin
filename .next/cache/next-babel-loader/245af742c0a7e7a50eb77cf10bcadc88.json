{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT_PRICE, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst Dashboard = () => {\n  const {\n    0: notifications,\n    1: updateNotifications\n  } = useState([]); // Querys\n  // const { loading, error, data } = useQuery<ProductInventoryData>(\n  //   QUERY_PRODUCT_PRICE,\n  //   {\n  //     onError: (error) => {\n  //       console.log(error);\n  //     },\n  //   }\n  // );\n  // Mutations\n\n  const [updatePrice, {\n    loading: MutationUpdatePriceLoading,\n    error: MutationUpdatePriceError\n  }] = useMutation(MUTATION_PRICE, {\n    onError: error => {\n      console.log(error);\n    },\n    onCompleted: () => {\n      addNotification('Notification', `Your price has been updated to $${localData.getProduct.price.toFixed(2)}`, 'info', notifications, updateNotifications);\n    }\n  }); // Local Methods\n\n  const removeNotification = id => {\n    const data = notifications;\n    const toasts = data.filter(item => item.id !== id);\n    updateNotifications(toasts);\n  };\n\n  const client = useApolloClient();\n\n  const onChangeMe = e => {\n    const price = parseFloat(e.target.value);\n    client.writeData({\n      data: {\n        getProduct: {\n          id: '123',\n          price,\n          __typename: 'Product'\n        }\n      }\n    });\n  };\n\n  if (loading) {\n    return __jsx(Growing, {\n      visible: true,\n      fullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    type: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Network Error.\")); // const {\n  //   getProduct: { price },\n  // } = data;\n\n  const QUERY_PRODUCT = gql`\n    query {\n      getProduct {\n        id\n        price\n      }\n    }\n  `;\n  const QUERY_PRODUCTS = gql`\n    query {\n      allProducts @client\n    }\n  `; // const { data: localDatas } = useQuery(QUERY_PRODUCTS);\n\n  const {\n    data: localData\n  } = useQuery(QUERY_PRODUCT);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, console.log(localData), __jsx(ToastContainer, {\n    allToasts: notifications,\n    removeNotification: removeNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mb-3 col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Item Price: \", localData.getProduct.price.toFixed(2)), __jsx(\"form\", {\n    onSubmit: () => event.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(InputPrice, {\n    onChange: onChangeMe,\n    labelTitle: \"Item Price\",\n    price: localData.getProduct.price.toFixed(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    submitPrice: submitPrice,\n    updatePrice: updatePrice,\n    query: QUERY_PRODUCT_PRICE,\n    mutateLoading: MutationUpdatePriceLoading,\n    price: localData.getProduct.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, __jsx(Growing, {\n    visible: MutationUpdatePriceLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), MutationUpdatePriceLoading ? ' Loading...' : 'Update', MutationUpdatePriceError ? 'Network error occured.' : ''))))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","useQuery","useMutation","QUERY_PRODUCT_PRICE","MUTATION_PRICE","addNotification","submitPrice","ToastContainer","Card","CardBody","CardTitle","FormGroup","InputPrice","Button","Growing","Alert","useApolloClient","gql","Dashboard","notifications","updateNotifications","updatePrice","loading","MutationUpdatePriceLoading","error","MutationUpdatePriceError","onError","console","log","onCompleted","localData","getProduct","price","toFixed","removeNotification","id","data","toasts","filter","item","client","onChangeMe","e","parseFloat","target","value","writeData","__typename","QUERY_PRODUCT","QUERY_PRODUCTS","event","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT_PRICE, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface DashboardState {\n  price: number;\n}\n\ninterface ProductInventoryData {\n  getProduct: ProductInventory;\n}\n\ninterface ProductInventory {\n  price: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [notifications, updateNotifications] = useState([]);\n\n  // Querys\n  // const { loading, error, data } = useQuery<ProductInventoryData>(\n  //   QUERY_PRODUCT_PRICE,\n  //   {\n  //     onError: (error) => {\n  //       console.log(error);\n  //     },\n  //   }\n  // );\n\n  // Mutations\n  const [\n    updatePrice,\n    { loading: MutationUpdatePriceLoading, error: MutationUpdatePriceError },\n  ] = useMutation(MUTATION_PRICE, {\n    onError: (error) => {\n      console.log(error);\n    },\n    onCompleted: () => {\n      addNotification(\n        'Notification',\n        `Your price has been updated to $${localData.getProduct.price.toFixed(\n          2\n        )}`,\n        'info',\n        notifications,\n        updateNotifications\n      );\n    },\n  });\n\n  // Local Methods\n  const removeNotification = (id: number) => {\n    const data = notifications;\n    const toasts = data.filter((item): any => item.id !== id);\n\n    updateNotifications(toasts);\n  };\n\n  const client = useApolloClient();\n\n  const onChangeMe = (e) => {\n    const price = parseFloat(e.target.value);\n\n    client.writeData({\n      data: {\n        getProduct: {\n          id: '123',\n          price,\n          __typename: 'Product',\n        },\n      },\n    });\n  };\n\n  if (loading) {\n    return <Growing visible={true} fullScreen={true} />;\n  }\n\n  if (error)\n    return (\n      <div className=\"container\">\n        <Alert type=\"danger\">Network Error.</Alert>\n      </div>\n    );\n\n  // const {\n  //   getProduct: { price },\n  // } = data;\n\n  const QUERY_PRODUCT = gql`\n    query {\n      getProduct {\n        id\n        price\n      }\n    }\n  `;\n\n  const QUERY_PRODUCTS = gql`\n    query {\n      allProducts @client\n    }\n  `;\n\n  // const { data: localDatas } = useQuery(QUERY_PRODUCTS);\n  const { data: localData } = useQuery(QUERY_PRODUCT);\n\n  return (\n    <div className=\"container\">\n      {/* {console.log(localDatas)} */}\n      {console.log(localData)}\n      <ToastContainer\n        allToasts={notifications}\n        removeNotification={removeNotification}\n      />\n      <div className=\"row align-items-center\">\n        <div className=\"p-3 mb-3 col-3\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                Item Price: {localData.getProduct.price.toFixed(2)}\n              </CardTitle>\n              <form onSubmit={() => event.preventDefault()}>\n                <FormGroup>\n                  <InputPrice\n                    onChange={onChangeMe}\n                    labelTitle=\"Item Price\"\n                    price={localData.getProduct.price.toFixed(2)}\n                  />\n                  <Button\n                    submitPrice={submitPrice}\n                    updatePrice={updatePrice}\n                    query={QUERY_PRODUCT_PRICE}\n                    mutateLoading={MutationUpdatePriceLoading}\n                    price={localData.getProduct.price}\n                  >\n                    <Growing visible={MutationUpdatePriceLoading} />\n                    {MutationUpdatePriceLoading ? ' Loading...' : 'Update'}\n                    {MutationUpdatePriceError ? 'Network error occured.' : ''}\n                  </Button>\n                </FormGroup>\n              </form>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}