{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      getGlobalConfig {\\n        businessName\\n        fullName\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { MUTATION_PRICE } from '../graphql';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nvar Dashboard = function Dashboard() {\n  var _useState = useState([]),\n      notifications = _useState[0],\n      updateNotifications = _useState[1];\n\n  var QUERY_GLOBAL_CONFIG = gql(_templateObject()); // Querys\n  // const { loading, error, data } = useQuery<ProductInventoryData>(\n  //   QUERY_GLOBAL_CONFIG,\n  //   {\n  //     onError: (error) => {\n  //       console.log(error);\n  //     },\n  //   }\n  // );\n\n  var _useQuery = useQuery(QUERY_GLOBAL_CONFIG),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data; // Mutations\n\n\n  var _useMutation = useMutation(MUTATION_PRICE, {\n    onError: function onError(error) {\n      console.log(error);\n    },\n    onCompleted: function onCompleted() {// addNotification(\n      //   'Notification',\n      //   `Your price has been updated to $${localData.getProduct.price.toFixed(\n      //     2\n      //   )}`,\n      //   'info',\n      //   notifications,\n      //   updateNotifications\n      // );\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updatePrice = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      MutationUpdatePriceLoading = _useMutation2$.loading,\n      MutationUpdatePriceError = _useMutation2$.error; // Local Methods\n\n\n  var removeNotification = function removeNotification(id) {\n    var data = notifications;\n    var toasts = data.filter(function (item) {\n      return item.id !== id;\n    });\n    updateNotifications(toasts);\n  };\n\n  var client = useApolloClient();\n\n  var onChangeMe = function onChangeMe(e) {\n    var price = parseFloat(e.target.value);\n    client.writeData({\n      data: {\n        getProduct: {\n          id: '123',\n          price: price,\n          __typename: 'Product'\n        }\n      }\n    });\n  };\n\n  if (loading) {\n    return __jsx(Growing, {\n      visible: true,\n      fullScreen: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    type: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Network Error.\"));\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, console.log(data), __jsx(ToastContainer, {\n    allToasts: notifications,\n    removeNotification: removeNotification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3 mb-3 col-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Item Price:\", ' '))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","useQuery","useMutation","MUTATION_PRICE","ToastContainer","Card","CardBody","CardTitle","Growing","Alert","useApolloClient","gql","Dashboard","notifications","updateNotifications","QUERY_GLOBAL_CONFIG","loading","error","data","onError","console","log","onCompleted","updatePrice","MutationUpdatePriceLoading","MutationUpdatePriceError","removeNotification","id","toasts","filter","item","client","onChangeMe","e","price","parseFloat","target","value","writeData","getProduct","__typename"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAA8BC,cAA9B,QAAoD,YAApD;AAGA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,oBAA1C;AAGA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAcA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA,kBACaZ,QAAQ,CAAC,EAAD,CADrB;AAAA,MACzBa,aADyB;AAAA,MACVC,mBADU;;AAGhC,MAAMC,mBAAmB,GAAGJ,GAAH,mBAAzB,CAHgC,CAYhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBgC,kBAsBCV,QAAQ,CAACc,mBAAD,CAtBT;AAAA,MAsBxBC,OAtBwB,aAsBxBA,OAtBwB;AAAA,MAsBfC,KAtBe,aAsBfA,KAtBe;AAAA,MAsBRC,IAtBQ,aAsBRA,IAtBQ,EAwBhC;;;AAxBgC,qBA4B5BhB,WAAW,CAACC,cAAD,EAAiB;AAC9BgB,IAAAA,OAAO,EAAE,iBAACF,KAAD,EAAW;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KAH6B;AAI9BK,IAAAA,WAAW,EAAE,uBAAM,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAd6B,GAAjB,CA5BiB;AAAA;AAAA,MA0B9BC,WA1B8B;AAAA;AAAA,MA2BnBC,0BA3BmB,kBA2B5BR,OA3B4B;AAAA,MA2BgBS,wBA3BhB,kBA2BSR,KA3BT,EA6ChC;;;AACA,MAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,EAAD,EAAgB;AACzC,QAAMT,IAAI,GAAGL,aAAb;AACA,QAAMe,MAAM,GAAGV,IAAI,CAACW,MAAL,CAAY,UAACC,IAAD;AAAA,aAAeA,IAAI,CAACH,EAAL,KAAYA,EAA3B;AAAA,KAAZ,CAAf;AAEAb,IAAAA,mBAAmB,CAACc,MAAD,CAAnB;AACD,GALD;;AAOA,MAAMG,MAAM,GAAGrB,eAAe,EAA9B;;AAEA,MAAMsB,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACxB,QAAMC,KAAK,GAAGC,UAAU,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAxB;AAEAN,IAAAA,MAAM,CAACO,SAAP,CAAiB;AACfpB,MAAAA,IAAI,EAAE;AACJqB,QAAAA,UAAU,EAAE;AACVZ,UAAAA,EAAE,EAAE,KADM;AAEVO,UAAAA,KAAK,EAALA,KAFU;AAGVM,UAAAA,UAAU,EAAE;AAHF;AADR;AADS,KAAjB;AASD,GAZD;;AAcA,MAAIxB,OAAJ,EAAa;AACX,WAAO,MAAC,OAAD;AAAS,MAAA,OAAO,EAAE,IAAlB;AAAwB,MAAA,UAAU,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIC,KAAJ,EACE,OACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAMF,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,CAACC,GAAR,CAAYH,IAAZ,CADH,EAEE,MAAC,cAAD;AACE,IAAA,SAAS,EAAEL,aADb;AAEE,IAAA,kBAAkB,EAAEa,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,GADd,CADF,CADF,CADF,CADF,CANF,CADF;AA4CD,CA5HD;;AA8HA,eAAed,SAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QUERY_PRODUCT_PRICE, MUTATION_PRICE } from '../graphql';\nimport { addNotification } from '../utils/toast';\nimport { submitPrice } from '../utils/price';\nimport ToastContainer from '../components/ToastContainer';\nimport { Card, CardBody, CardTitle } from '../components/Card';\nimport { FormGroup, InputPrice } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { Growing } from '../components/Spinner';\nimport { Alert } from '../components/Alerts';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface DashboardState {\n  price: number;\n}\n\ninterface ProductInventoryData {\n  getProduct: ProductInventory;\n}\n\ninterface ProductInventory {\n  price: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [notifications, updateNotifications] = useState([]);\n\n  const QUERY_GLOBAL_CONFIG = gql`\n    query {\n      getGlobalConfig {\n        businessName\n        fullName\n      }\n    }\n  `;\n\n  // Querys\n  // const { loading, error, data } = useQuery<ProductInventoryData>(\n  //   QUERY_GLOBAL_CONFIG,\n  //   {\n  //     onError: (error) => {\n  //       console.log(error);\n  //     },\n  //   }\n  // );\n\n  const { loading, error, data } = useQuery(QUERY_GLOBAL_CONFIG);\n\n  // Mutations\n  const [\n    updatePrice,\n    { loading: MutationUpdatePriceLoading, error: MutationUpdatePriceError },\n  ] = useMutation(MUTATION_PRICE, {\n    onError: (error) => {\n      console.log(error);\n    },\n    onCompleted: () => {\n      // addNotification(\n      //   'Notification',\n      //   `Your price has been updated to $${localData.getProduct.price.toFixed(\n      //     2\n      //   )}`,\n      //   'info',\n      //   notifications,\n      //   updateNotifications\n      // );\n    },\n  });\n\n  // Local Methods\n  const removeNotification = (id: number) => {\n    const data = notifications;\n    const toasts = data.filter((item): any => item.id !== id);\n\n    updateNotifications(toasts);\n  };\n\n  const client = useApolloClient();\n\n  const onChangeMe = (e) => {\n    const price = parseFloat(e.target.value);\n\n    client.writeData({\n      data: {\n        getProduct: {\n          id: '123',\n          price,\n          __typename: 'Product',\n        },\n      },\n    });\n  };\n\n  if (loading) {\n    return <Growing visible={true} fullScreen={true} />;\n  }\n\n  if (error)\n    return (\n      <div className=\"container\">\n        <Alert type=\"danger\">Network Error.</Alert>\n      </div>\n    );\n\n  return (\n    <div className=\"container\">\n      {console.log(data)}\n      <ToastContainer\n        allToasts={notifications}\n        removeNotification={removeNotification}\n      />\n      <div className=\"row align-items-center\">\n        <div className=\"p-3 mb-3 col-3\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                Item Price:{' '}\n                {/* {localData.getGlobalConfig.businessName\n                  ? 'Something here'\n                  : 'Nothing Here'} */}\n                {/* Item Price: {data.getProduct.price.toFixed(2)} */}\n              </CardTitle>\n              {/* <form onSubmit={() => event.preventDefault()}>\n                <FormGroup>\n                  <InputPrice\n                    onChange={onChangeMe}\n                    labelTitle=\"Item Price\"\n                    price={localData.getProduct.price.toFixed(2)}\n                  />\n                  <Button\n                    submitPrice={submitPrice}\n                    updatePrice={updatePrice}\n                    query={QUERY_PRODUCT_PRICE}\n                    mutateLoading={MutationUpdatePriceLoading}\n                    price={localData.getProduct.price}\n                  >\n                    <Growing visible={MutationUpdatePriceLoading} />\n                    {MutationUpdatePriceLoading ? ' Loading...' : 'Update'}\n                    {MutationUpdatePriceError ? 'Network error occured.' : ''}\n                  </Button>\n                </FormGroup>\n              </form> */}\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}