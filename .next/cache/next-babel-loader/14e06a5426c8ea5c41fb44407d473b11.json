{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useState } from 'react';\n\nvar Dashboard = function Dashboard() {\n  var numUSD = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n\n  var _useState = useState({\n    price: 7\n  }),\n      state = _useState[0],\n      updateState = _useState[1];\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Dashboard\")), __jsx(\"div\", {\n    className: \"col-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Item Details\"), __jsx(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Price: \", numUSD.format(state.price)), __jsx(\"form\", {\n    onSubmit: function onSubmit() {\n      return event.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group col-md-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"sr-only\",\n    htmlFor: \"inlineFormInputGroup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: \"input-group mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"$\")), __jsx(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"inlineFormInputGroup\",\n    value: numUSD.format(state.price) // onChange={e =>\n    //   updateState({ price: parseInt(e.target.value) })\n    // }\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return alert('Clicked');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Sign in\"))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/dashboard.tsx"],"names":["React","useState","Dashboard","numUSD","Intl","NumberFormat","style","currency","price","state","updateState","format","event","preventDefault","alert"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAQA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,GAAM;AAChD,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC5CC,IAAAA,KAAK,EAAE,UADqC;AAE5CC,IAAAA,QAAQ,EAAE;AAFkC,GAA/B,CAAf;;AADgD,kBAKnBN,QAAQ,CAAiB;AACpDO,IAAAA,KAAK,EAAE;AAD6C,GAAjB,CALW;AAAA,MAKzCC,KALyC;AAAA,MAKlCC,WALkC;;AAShD,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYP,MAAM,CAACQ,MAAP,CAAcF,KAAK,CAACD,KAApB,CAAZ,CAFF,EAGE;AAAM,IAAA,QAAQ,EAAE;AAAA,aAAMI,KAAK,CAACC,cAAN,EAAN;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA2B,IAAA,OAAO,EAAC,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,EAIE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,sBAHL;AAIE,IAAA,KAAK,EAAEV,MAAM,CAACQ,MAAP,CAAcF,KAAK,CAACD,KAApB,CAJT,CAKE;AACA;AACA;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,CADF,EAoBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMM,KAAK,CAAC,SAAD,CAAX;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,CADF,CAHF,CAJF,CADF,CADF;AA2CD,CApDD;;AAsDA,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport interface DashboardProps {}\n\nexport interface DashboardState {\n  price: number;\n}\n\nconst Dashboard: React.FC<DashboardProps> = () => {\n  const numUSD = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n  const [state, updateState] = useState<DashboardState>({\n    price: 7\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-12\">\n          <h1>Dashboard</h1>\n        </div>\n        <div className=\"col-3\">\n          <h4>Item Details</h4>\n          <h6>Price: {numUSD.format(state.price)}</h6>\n          <form onSubmit={() => event.preventDefault()}>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-12\">\n                <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">\n                  Username\n                </label>\n                <div className=\"input-group mb-2\">\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">$</div>\n                  </div>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"inlineFormInputGroup\"\n                    value={numUSD.format(state.price)}\n                    // onChange={e =>\n                    //   updateState({ price: parseInt(e.target.value) })\n                    // }\n                  />\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={() => alert('Clicked')}\n              >\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}