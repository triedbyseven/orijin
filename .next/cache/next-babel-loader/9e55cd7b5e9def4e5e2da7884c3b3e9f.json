{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Dashboard/Products/Products.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../../graphql';\nimport { ProductsNav, ProductsTable } from './';\n\nvar Products = function Products() {\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      productsError = _useQuery.error,\n      productsLoading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (productsLoading) return __jsx(ProductsNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"row align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(ProductsNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(ProductsTable, {\n    products: data.getProducts,\n    productsLoading: productsLoading,\n    productsError: productsError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Products;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Dashboard/Products/Products.tsx"],"names":["React","useQuery","QUERY_PRODUCTS","ProductsNav","ProductsTable","Products","productsError","error","productsLoading","loading","data","getProducts"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,IAA3C;;AAeA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,GAAM;AAAA,kBACkBJ,QAAQ,CAAeC,cAAf,CAD1B;AAAA,MAChCI,aADgC,aACvCC,KADuC;AAAA,MACRC,eADQ,aACjBC,OADiB;AAAA,MACSC,IADT,aACSA,IADT;;AAG/C,MAAIF,eAAJ,EAAqB,OAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAErB,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,aAAD;AACE,IAAA,QAAQ,EAAEE,IAAI,CAACC,WADjB;AAEE,IAAA,eAAe,EAAEH,eAFnB;AAGE,IAAA,aAAa,EAAEF,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAfD;;AAiBA,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../../graphql';\nimport { ProductsNav, ProductsTable } from './';\n\nexport interface ProductsProps {}\n\ninterface ProductsData {\n  getProducts: Products[];\n}\n\ninterface Products {\n  id: string;\n  title: string;\n  price: number;\n  inventory: string;\n}\n\nconst Products: React.SFC<ProductsProps> = () => {\n  const { error: productsError, loading: productsLoading, data } = useQuery<ProductsData>(QUERY_PRODUCTS);\n\n  if (productsLoading) return <ProductsNav />;\n\n  return (\n    <div className=\"row align-items-center\">\n      <ProductsNav />\n      <ProductsTable\n        products={data.getProducts}\n        productsLoading={productsLoading}\n        productsError={productsError}\n      />\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}