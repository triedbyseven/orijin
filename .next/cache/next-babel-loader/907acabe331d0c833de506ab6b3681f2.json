{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation runSetup($success: Boolean) {\\n    runSetup(success: $success) {\\n      success\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar RUN_SETUP = gql(_templateObject());\n\nvar Setup = function Setup() {\n  var _useState = useState(false),\n      state = _useState[0],\n      updateState = _useState[1];\n\n  var _useMutation = useMutation(RUN_SETUP, {\n    onCompleted: function onCompleted() {\n      return updateState(false);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      runSetup = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var runFullSetup = function runFullSetup(success) {\n    updateState(true);\n    setTimeout(function () {\n      runSetup({\n        variables: {\n          success: success\n        }\n      });\n    }, 3000);\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"SetUp Page\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"All right your ready to run your website setup!\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return runFullSetup(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Run SetUp\"), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, state ? '...loading' : ''));\n};\n\nexport default Setup;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx"],"names":["React","useState","useMutation","gql","RUN_SETUP","Setup","state","updateState","onCompleted","runSetup","data","runFullSetup","success","setTimeout","variables"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAIA,IAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAQA,IAAME,KAA2B,GAAG,SAA9BA,KAA8B,GAAM;AAAA,kBACXJ,QAAQ,CAAC,KAAD,CADG;AAAA,MACjCK,KADiC;AAAA,MAC1BC,WAD0B;;AAAA,qBAENL,WAAW,CAACE,SAAD,EAAY;AACvDI,IAAAA,WAAW,EAAE;AAAA,aAAMD,WAAW,CAAC,KAAD,CAAjB;AAAA;AAD0C,GAAZ,CAFL;AAAA;AAAA,MAEjCE,QAFiC;AAAA,MAErBC,IAFqB,oBAErBA,IAFqB;;AAMxC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO,EAAI;AAC9BL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,IAAAA,UAAU,CAAC,YAAM;AACfJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,SAAS,EAAE;AAAEF,UAAAA,OAAO,EAAPA;AAAF;AAAb,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,EAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,YAAY,CAAC,IAAD,CAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,KAAK,GAAG,YAAH,GAAkB,EAA9B,CAVF,CADF;AAcD,CA3BD;;AA6BA,eAAeD,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface SetupProps {}\n\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetup(success: $success) {\n      success\n    }\n  }\n`;\n\nconst Setup: React.FC<SetupProps> = () => {\n  const [state, updateState] = useState(false);\n  const [runSetup, { data }]: any = useMutation(RUN_SETUP, {\n    onCompleted: () => updateState(false)\n  });\n\n  const runFullSetup = success => {\n    updateState(true);\n    setTimeout(() => {\n      runSetup({ variables: { success } });\n    }, 3000);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>SetUp Page</h1>\n      <p>All right your ready to run your website setup!</p>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => runFullSetup(true)}\n      >\n        Run SetUp\n      </button>\n      <span>{state ? '...loading' : ''}</span>\n    </div>\n  );\n};\n\nexport default Setup;\n"]},"metadata":{},"sourceType":"module"}