{"ast":null,"code":"// import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({\n  uri\n});\nconst operation = {\n  query: QUERY_GLOBAL_CONFIG\n};\nexport default function () {\n  const {\n    0: config,\n    1: updateConfig\n  } = useState({\n    data: {},\n    loading: true\n  });\n\n  async function myFunc() {\n    try {\n      const {\n        getGlobalConfig\n      } = await makePromise(execute(link, operation));\n      updateConfig({\n        data: response,\n        loading: false\n      });\n    } catch (error) {\n      console.log(`received error ${error}`);\n    }\n  }\n\n  useEffect(() => {\n    myFunc();\n  }, []);\n  return config;\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/src/customHooks/useConfigQuery.ts"],"names":["useState","useEffect","QUERY_GLOBAL_CONFIG","execute","makePromise","HttpLink","uri","link","operation","query","config","updateConfig","data","loading","myFunc","getGlobalConfig","response","error","console","log"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,eAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AACA,MAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEC,EAAAA;AAAF,CAAb,CAAb;AAEA,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEP;AADS,CAAlB;AAIA,eAAe,YAAY;AACzB,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAyBX,QAAQ,CAAC;AACtCY,IAAAA,IAAI,EAAE,EADgC;AAEtCC,IAAAA,OAAO,EAAE;AAF6B,GAAD,CAAvC;;AAKA,iBAAeC,MAAf,GAAwB;AACtB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAsB,MAAMX,WAAW,CAACD,OAAO,CAACI,IAAD,EAAOC,SAAP,CAAR,CAA7C;AACAG,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAEI,QAAR;AAAkBH,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAAZ;AACD,KAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBF,KAAM,EAApC;AACD;AACF;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,MAAP;AACD","sourcesContent":["// import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\n\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({ uri });\n\nconst operation = {\n  query: QUERY_GLOBAL_CONFIG,\n};\n\nexport default function () {\n  const [config, updateConfig] = useState({\n    data: {},\n    loading: true,\n  });\n\n  async function myFunc() {\n    try {\n      const { getGlobalConfig } = await makePromise(execute(link, operation));\n      updateConfig({ data: response, loading: false });\n    } catch (error) {\n      console.log(`received error ${error}`);\n    }\n  }\n\n  useEffect(() => {\n    myFunc();\n  }, []);\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"module"}