{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport React from 'react';\nimport withApolloClient from '../lib/with-apollo-client';\nimport { ApolloProvider } from 'react-apollo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient\n    } = this.props;\n    cache.writeData({\n      data: {\n        todos: [],\n        visibilityFilter: 'SHOW_ALL',\n        networkStatus: {\n          __typename: 'NetworkStatus',\n          isConnected: false\n        }\n      }\n    });\n    return __jsx(ApolloProvider, {\n      client: apolloClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default withApolloClient(MyApp);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/_app.js"],"names":["App","React","withApolloClient","ApolloProvider","MyApp","render","Component","pageProps","apolloClient","props","cache","writeData","data","todos","visibilityFilter","networkStatus","__typename","isConnected"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAO,sCAAP;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtBK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAyC,KAAKC,KAApD;AAEAC,IAAAA,KAAK,CAACC,SAAN,CAAgB;AACdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,gBAAgB,EAAE,UAFd;AAGJC,QAAAA,aAAa,EAAE;AACbC,UAAAA,UAAU,EAAE,eADC;AAEbC,UAAAA,WAAW,EAAE;AAFA;AAHX;AADQ,KAAhB;AAUA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAET,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBqB;;AAsBxB,eAAeL,gBAAgB,CAACE,KAAD,CAA/B","sourcesContent":["import App from 'next/app';\nimport React from 'react';\nimport withApolloClient from '../lib/with-apollo-client';\nimport { ApolloProvider } from 'react-apollo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, apolloClient } = this.props;\n\n    cache.writeData({\n      data: {\n        todos: [],\n        visibilityFilter: 'SHOW_ALL',\n        networkStatus: {\n          __typename: 'NetworkStatus',\n          isConnected: false,\n        },\n      },\n    });\n    return (\n      <ApolloProvider client={apolloClient}>\n        <Component {...pageProps} />\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default withApolloClient(MyApp);\n"]},"metadata":{},"sourceType":"module"}