{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { v4 as uuid } from 'uuid';\nexport var addNotification = function addNotification(title, text, type, data, updater) {\n  var response = data;\n  var notification = [].concat(_toConsumableArray(response), [{\n    id: uuid(),\n    title: title,\n    text: text,\n    type: type\n  }]); // console.log(notification);\n\n  updater(function (prevState) {\n    return _objectSpread({}, prevState, {\n      notification: notification\n    });\n  });\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/utils/toast.ts"],"names":["v4","uuid","addNotification","title","text","type","data","updater","response","notification","id","prevState"],"mappings":";;;;;;;AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,KAD6B,EAE7BC,IAF6B,EAG7BC,IAH6B,EAI7BC,IAJ6B,EAK7BC,OAL6B,EAM1B;AACH,MAAMC,QAAQ,GAAGF,IAAjB;AACA,MAAMG,YAAY,gCAAOD,QAAP,IAAiB;AAAEE,IAAAA,EAAE,EAAET,IAAI,EAAV;AAAcE,IAAAA,KAAK,EAALA,KAAd;AAAqBC,IAAAA,IAAI,EAAJA,IAArB;AAA2BC,IAAAA,IAAI,EAAJA;AAA3B,GAAjB,EAAlB,CAFG,CAGH;;AACAE,EAAAA,OAAO,CAAC,UAACI,SAAD;AAAA,6BAAqBA,SAArB;AAAgCF,MAAAA,YAAY,EAAZA;AAAhC;AAAA,GAAD,CAAP;AACD,CAXM","sourcesContent":["import { v4 as uuid } from 'uuid';\n\nexport const addNotification = (\n  title: string,\n  text: string,\n  type: string,\n  data: any,\n  updater: any\n) => {\n  const response = data;\n  const notification = [...response, { id: uuid(), title, text, type }];\n  // console.log(notification);\n  updater((prevState) => ({ ...prevState, notification }));\n};\n"]},"metadata":{},"sourceType":"module"}