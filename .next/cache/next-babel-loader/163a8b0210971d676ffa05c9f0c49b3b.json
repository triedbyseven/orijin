{"ast":null,"code":"// import axios from 'axios';\nimport gql from 'graphql-tag';\nimport { useState, useEffect } from 'react';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({\n  uri\n});\nconst operation = {\n  query: gql`\n    query {\n      hello\n    }\n  `\n};\nexport default function () {\n  const {\n    0: config,\n    1: updateConfig\n  } = useState({});\n  useEffect(() => {\n    console.log('Hello');\n\n    try {\n      makePromise(execute(link, operation)).then(data => console.log(`received data ${JSON.stringify(data, null, 2)}`)).catch(error => console.log(`received error ${error}`));\n    } catch (error) {} // try {\n    //   const todoData = await API.graphql(graphqlOperation(query));\n    //   updateTodos(todoData.data.listTodos.items);\n    // } catch (err) {\n    //   console.log('error: ', err);\n    // }\n\n  }, []);\n  return config;\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/src/customHooks/useConfigQuery.ts"],"names":["gql","useState","useEffect","execute","makePromise","HttpLink","uri","link","operation","query","config","updateConfig","console","log","then","data","JSON","stringify","catch","error"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AACA,MAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEC,EAAAA;AAAF,CAAb,CAAb;AAEA,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAET,GAAI;;;;;AADK,CAAlB;AAQA,eAAe,YAAY;AACzB,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAI;AACFT,MAAAA,WAAW,CAACD,OAAO,CAACI,IAAD,EAAOC,SAAP,CAAR,CAAX,CACGM,IADH,CACSC,IAAD,IACJH,OAAO,CAACC,GAAR,CAAa,iBAAgBG,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA8B,EAA3D,CAFJ,EAIGG,KAJH,CAIUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAa,kBAAiBM,KAAM,EAApC,CAJpB;AAKD,KAND,CAME,OAAOA,KAAP,EAAc,CAAE,CARJ,CASd;AACA;AACA;AACA;AACA;AACA;;AACD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAOT,MAAP;AACD","sourcesContent":["// import axios from 'axios';\nimport gql from 'graphql-tag';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\n\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({ uri });\n\nconst operation = {\n  query: gql`\n    query {\n      hello\n    }\n  `,\n};\n\nexport default function () {\n  const [config, updateConfig] = useState({});\n\n  useEffect(() => {\n    console.log('Hello');\n    try {\n      makePromise(execute(link, operation))\n        .then((data) =>\n          console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        )\n        .catch((error) => console.log(`received error ${error}`));\n    } catch (error) {}\n    // try {\n    //   const todoData = await API.graphql(graphqlOperation(query));\n    //   updateTodos(todoData.data.listTodos.items);\n    // } catch (err) {\n    //   console.log('error: ', err);\n    // }\n  }, []);\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"module"}