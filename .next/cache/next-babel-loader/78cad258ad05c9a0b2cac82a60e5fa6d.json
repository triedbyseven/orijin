{"ast":null,"code":"import { ApolloServer } from 'apollo-server-micro';\n\nrequire('../../server/database/config'); //Resolvers\n\n\nconst Query = require('../../server/resolvers/Query');\n\nimport Mutation from '../../server/resolvers/Mutation'; // Schema\n\nconst {\n  query\n} = require('../../server/schema/query');\n\nimport { mutation } from '../../server/schema/mutation';\n\nconst {\n  product\n} = require('../../server/schema/product');\n\nconst {\n  setup\n} = require('../../server/schema/setup');\n\nconst resolvers = {\n  Query\n};\nconst apolloServer = new ApolloServer({\n  typeDefs: [query, mutation, product, setup],\n  resolvers\n});\nconst handler = apolloServer.createHandler({\n  path: '/api/graphql'\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default handler;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/api/graphql.js"],"names":["ApolloServer","require","Query","Mutation","query","mutation","product","setup","resolvers","apolloServer","typeDefs","handler","createHandler","path","config","api","bodyParser"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AAEAC,OAAO,CAAC,8BAAD,CAAP,C,CAEA;;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,8BAAD,CAArB;;AACA,OAAOE,QAAP,MAAqB,iCAArB,C,CAEA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,OAAO,CAAC,2BAAD,CAAzB;;AACA,SAASI,QAAT,QAAyB,8BAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcL,OAAO,CAAC,6BAAD,CAA3B;;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAYN,OAAO,CAAC,2BAAD,CAAzB;;AAEA,MAAMO,SAAS,GAAG;AAChBN,EAAAA;AADgB,CAAlB;AAIA,MAAMO,YAAY,GAAG,IAAIT,YAAJ,CAAiB;AACpCU,EAAAA,QAAQ,EAAE,CAACN,KAAD,EAAQC,QAAR,EAAkBC,OAAlB,EAA2BC,KAA3B,CAD0B;AAEpCC,EAAAA;AAFoC,CAAjB,CAArB;AAKA,MAAMG,OAAO,GAAGF,YAAY,CAACG,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeL,OAAf","sourcesContent":["import { ApolloServer } from 'apollo-server-micro';\n\nrequire('../../server/database/config');\n\n//Resolvers\nconst Query = require('../../server/resolvers/Query');\nimport Mutation from '../../server/resolvers/Mutation';\n\n// Schema\nconst { query } = require('../../server/schema/query');\nimport { mutation } from '../../server/schema/mutation';\nconst { product } = require('../../server/schema/product');\nconst { setup } = require('../../server/schema/setup');\n\nconst resolvers = {\n  Query\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs: [query, mutation, product, setup],\n  resolvers\n});\n\nconst handler = apolloServer.createHandler({ path: '/api/graphql' });\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}