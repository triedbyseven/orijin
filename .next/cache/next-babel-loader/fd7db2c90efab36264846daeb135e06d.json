{"ast":null,"code":"// import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({\n  uri\n});\nconst operation = {\n  query: QUERY_GLOBAL_CONFIG\n};\n\nasync function myFunc() {\n  try {\n    const response = await makePromise(execute(link, operation));\n    console.log(`received data ${JSON.stringify(response, null, 2)}`);\n  } catch (error) {\n    console.log(`received error ${error}`);\n  }\n}\n\nexport default function () {\n  const {\n    0: config,\n    1: updateConfig\n  } = useState({});\n  useEffect(() => {\n    myFunc();\n  }, []);\n  return config;\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/src/customHooks/useConfigQuery.ts"],"names":["useState","useEffect","QUERY_GLOBAL_CONFIG","execute","makePromise","HttpLink","uri","link","operation","query","myFunc","response","console","log","JSON","stringify","error","config","updateConfig"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,eAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AACA,MAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEC,EAAAA;AAAF,CAAb,CAAb;AAEA,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEP;AADS,CAAlB;;AAIA,eAAeQ,MAAf,GAAwB;AACtB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACD,OAAO,CAACI,IAAD,EAAOC,SAAP,CAAR,CAAlC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBC,IAAI,CAACC,SAAL,CAAeJ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAkC,EAA/D;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBG,KAAM,EAApC;AACD;AACF;;AAED,eAAe,YAAY;AACzB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOO,MAAP;AACD","sourcesContent":["// import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\n\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({ uri });\n\nconst operation = {\n  query: QUERY_GLOBAL_CONFIG,\n};\n\nasync function myFunc() {\n  try {\n    const response = await makePromise(execute(link, operation));\n    console.log(`received data ${JSON.stringify(response, null, 2)}`);\n  } catch (error) {\n    console.log(`received error ${error}`);\n  }\n}\n\nexport default function () {\n  const [config, updateConfig] = useState({});\n\n  useEffect(() => {\n    myFunc();\n  }, []);\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"module"}