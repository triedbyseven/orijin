{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetup(success: $success) {\n      success\n    }\n  }\n`;\n\nconst Setup = () => {\n  const router = useRouter();\n  console.log(router);\n  const [runSetup, {\n    loading: runSetupLoading\n  }] = useMutation(RUN_SETUP, {\n    onCompleted: () => {\n      alert('Okay your ready to rock!');\n      router.push('/');\n    }\n  });\n\n  const runFullSetup = success => {\n    runSetup({\n      variables: {\n        success\n      }\n    });\n  };\n\n  const loadSpinner = () => {\n    return __jsx(\"div\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      className: \"spinner-border spinner-border-sm text-primary\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"SetUp Page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"All right your ready to run your website setup!\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => runFullSetup(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Run SetUp\"), runSetupLoading ? loadSpinner() : '');\n};\n\nexport default Setup;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx"],"names":["React","useRouter","useMutation","gql","RUN_SETUP","Setup","router","console","log","runSetup","loading","runSetupLoading","onCompleted","alert","push","runFullSetup","success","variables","loadSpinner","marginLeft"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAI;;;;;;CAAtB;;AAQA,MAAME,KAAe,GAAG,MAAM;AAC5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAM,CAACG,QAAD,EAAW;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAX,IAAgDT,WAAW,CAACE,SAAD,EAAY;AAC3EQ,IAAAA,WAAW,EAAE,MAAM;AACjBC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACD;AAJ0E,GAAZ,CAAjE;;AAOA,QAAMC,YAAY,GAAIC,OAAD,IAAsB;AACzCP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAR;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxB,WACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OADT;AAEE,MAAA,SAAS,EAAC,+CAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AASD,GAVD;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,EAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAAC,IAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAUGJ,eAAe,GAAGO,WAAW,EAAd,GAAmB,EAVrC,CADF;AAcD,CAzCD;;AA2CA,eAAeb,KAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetup(success: $success) {\n      success\n    }\n  }\n`;\n\nconst Setup: React.FC = () => {\n  const router = useRouter();\n  console.log(router);\n\n  const [runSetup, { loading: runSetupLoading }]: any = useMutation(RUN_SETUP, {\n    onCompleted: () => {\n      alert('Okay your ready to rock!');\n      router.push('/');\n    }\n  });\n\n  const runFullSetup = (success: boolean) => {\n    runSetup({ variables: { success } });\n  };\n\n  const loadSpinner = () => {\n    return (\n      <div\n        style={{ marginLeft: '1rem' }}\n        className=\"spinner-border spinner-border-sm text-primary\"\n        role=\"status\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>SetUp Page</h1>\n      <p>All right your ready to run your website setup!</p>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => runFullSetup(true)}\n      >\n        Run SetUp\n      </button>\n      {runSetupLoading ? loadSpinner() : ''}\n    </div>\n  );\n};\n\nexport default Setup;\n"]},"metadata":{},"sourceType":"module"}