{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Toast.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\n\nconst Toast = ({\n  toggleToast,\n  updater\n}) => {\n  const {\n    0: second,\n    1: updateSecond\n  } = useState({\n    second: 0\n  });\n  useEffect(() => {\n    if (toggleToast === 1) {\n      console.log('Toast will close in 3 seconds...');\n\n      if (second > 0) {}\n\n      setInterval(() => {\n        console.log('Still Counting Down!'); // updateState(prevState => ({ ...prevState, toggleToast: 0 }));\n      }, 1000);\n    }\n  }, [toggleToast]);\n  return __jsx(\"div\", {\n    className: \"toast\",\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: {\n      width: '300px',\n      position: 'absolute',\n      top: 30,\n      right: 30,\n      opacity: toggleToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"toast-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    width: \"20\",\n    height: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"rect\", {\n    width: \"20\",\n    height: \"20\",\n    rx: \"4\",\n    ry: \"4\",\n    style: {\n      fill: 'rgb(0,122,255)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), __jsx(\"strong\", {\n    className: \"mr-auto\",\n    style: {\n      marginLeft: '0.4rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Toast\"), __jsx(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"just now\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"ml-2 mb-1 close\",\n    \"data-dismiss\": \"toast\",\n    \"aria-label\": \"Close\",\n    onClick: () => updater(prevState => _objectSpread({}, prevState, {\n      toggleToast: 0\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"))), __jsx(\"div\", {\n    className: \"toast-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Boom. Your price has been updated.\"));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Toast.tsx"],"names":["React","useEffect","useState","Toast","toggleToast","updater","second","updateSecond","console","log","setInterval","width","position","top","right","opacity","fill","marginLeft","prevState"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAWA,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AACjE,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAyBL,QAAQ,CAAa;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAb,CAAvC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,WAAW,KAAK,CAApB,EAAuB;AACrBI,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAEA,UAAIH,MAAM,GAAG,CAAb,EAAgB,CACf;;AAEDI,MAAAA,WAAW,CAAC,MAAM;AAChBF,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADgB,CAEhB;AACD,OAHU,EAGR,IAHQ,CAAX;AAID;AACF,GAZQ,EAYN,CAACL,WAAD,CAZM,CAAT;AAcA,SACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,iBAAU,WAHZ;AAIE,mBAAY,MAJd;AAKE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,GAAG,EAAE,EAHA;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,OAAO,EAAEX;AALJ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,EAAE,EAAC,GAJL;AAKE,IAAA,KAAK,EAAE;AACLY,MAAAA,IAAI,EAAE;AADD,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAaE;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAgBE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAiBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,oBAAa,OAHf;AAIE,kBAAW,OAJb;AAKE,IAAA,OAAO,EAAE,MACPZ,OAAO,CAACa,SAAS,sBAAUA,SAAV;AAAqBd,MAAAA,WAAW,EAAE;AAAlC,MAAV,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAjBF,CAbF,EA0CE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CA1CF,CADF;AA8CD,CA/DD;;AAiEA,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport interface ToastProps {\n  toggleToast: number;\n  updater: any;\n}\n\nexport interface ToastState {\n  second: number;\n}\n\nconst Toast: React.SFC<ToastProps> = ({ toggleToast, updater }) => {\n  const [second, updateSecond] = useState<ToastState>({ second: 0 });\n\n  useEffect(() => {\n    if (toggleToast === 1) {\n      console.log('Toast will close in 3 seconds...');\n\n      if (second > 0) {\n      }\n\n      setInterval(() => {\n        console.log('Still Counting Down!');\n        // updateState(prevState => ({ ...prevState, toggleToast: 0 }));\n      }, 1000);\n    }\n  }, [toggleToast]);\n\n  return (\n    <div\n      className=\"toast\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      style={{\n        width: '300px',\n        position: 'absolute',\n        top: 30,\n        right: 30,\n        opacity: toggleToast\n      }}\n    >\n      <div className=\"toast-header\">\n        {/* <img src=\"...\" className=\"rounded mr-2\" alt=\"...\" /> */}\n        <svg width=\"20\" height=\"20\">\n          <rect\n            width=\"20\"\n            height=\"20\"\n            rx=\"4\"\n            ry=\"4\"\n            style={{\n              fill: 'rgb(0,122,255)'\n            }}\n          />\n        </svg>\n        <strong className=\"mr-auto\" style={{ marginLeft: '0.4rem' }}>\n          Toast\n        </strong>\n        <small className=\"text-muted\">just now</small>\n        <button\n          type=\"button\"\n          className=\"ml-2 mb-1 close\"\n          data-dismiss=\"toast\"\n          aria-label=\"Close\"\n          onClick={() =>\n            updater(prevState => ({ ...prevState, toggleToast: 0 }))\n          }\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"toast-body\">Boom. Your price has been updated.</div>\n    </div>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}