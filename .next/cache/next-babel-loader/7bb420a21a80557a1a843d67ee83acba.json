{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Dashboard/Products/Products.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../../graphql';\nimport { ProductsNav } from './';\n\nvar Products = function Products() {\n  var _useQuery = useQuery(QUERY_PRODUCTS),\n      productsError = _useQuery.error,\n      productsLoading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (productsLoading) return __jsx(ProductsNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, data.getProducts.map(function (product) {\n    return __jsx(\"li\", {\n      key: product.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, product.title);\n  })));\n};\n\nexport default Products;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/components/Dashboard/Products/Products.tsx"],"names":["React","useQuery","QUERY_PRODUCTS","ProductsNav","Products","productsError","error","productsLoading","loading","data","getProducts","map","product","id","title"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA2C,IAA3C;;AAeA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,GAAM;AAAA,kBACkBH,QAAQ,CAAeC,cAAf,CAD1B;AAAA,MAChCG,aADgC,aACvCC,KADuC;AAAA,MACRC,eADQ,aACjBC,OADiB;AAAA,MACSC,IADT,aACSA,IADT;;AAG/C,MAAIF,eAAJ,EAAqB,OAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAErB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,OAAO,CAACE,KAA9B,CADoB;AAAA,GAArB,CADH,CAPF,CADF;AAeD,CApBD;;AAsBA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../../../graphql';\nimport { ProductsNav, ProductsTable } from './';\n\nexport interface ProductsProps {}\n\ninterface ProductsData {\n  getProducts: Products[];\n}\n\ninterface Products {\n  id: string;\n  title: string;\n  price: number;\n  inventory: string;\n}\n\nconst Products: React.SFC<ProductsProps> = () => {\n  const { error: productsError, loading: productsLoading, data } = useQuery<ProductsData>(QUERY_PRODUCTS);\n\n  if (productsLoading) return <ProductsNav />;\n\n  return (\n    <div className=\"row\">\n      {/* <ProductsNav />\n      <ProductsTable\n        products={data.getProducts}\n        productsLoading={productsLoading}\n        productsError={productsError}\n      /> */}\n      <ul>\n        {data.getProducts.map((product) => (\n          <li key={product.id}>{product.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}