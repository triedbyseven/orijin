{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetUp(success: $success) {\n      name\n    }\n  }\n`;\n\nconst Setup = () => {\n  const {\n    0: state,\n    1: updateState\n  } = useState(true);\n  const [runSetup, {\n    data\n  }] = useMutation(RUN_SETUP);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"SetUp Page\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => runSetup({\n      variables: {\n        success: true\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Run SetUp\"));\n};\n\nexport default Setup;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx"],"names":["React","useState","useMutation","gql","RUN_SETUP","Setup","state","updateState","runSetup","data","variables","success"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAIA,MAAMC,SAAS,GAAGD,GAAI;;;;;;CAAtB;;AAQA,MAAME,KAA2B,GAAG,MAAM;AACxC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAuBN,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACO,QAAD,EAAW;AAAEC,IAAAA;AAAF,GAAX,IAA4BP,WAAW,CAACE,SAAD,CAA7C;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAAEE,MAAAA,SAAS,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAb,KAAD,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAYD,CAhBD;;AAkBA,eAAeN,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface SetupProps {}\n\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetUp(success: $success) {\n      name\n    }\n  }\n`;\n\nconst Setup: React.FC<SetupProps> = () => {\n  const [state, updateState] = useState(true);\n  const [runSetup, { data }]: any = useMutation(RUN_SETUP);\n\n  return (\n    <div className=\"container\">\n      <h1>SetUp Page</h1>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => runSetup({ variables: { success: true } })}\n      >\n        Run SetUp\n      </button>\n    </div>\n  );\n};\n\nexport default Setup;\n"]},"metadata":{},"sourceType":"module"}