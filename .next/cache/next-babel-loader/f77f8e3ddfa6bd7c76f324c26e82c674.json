{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      hello\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import axios from 'axios';\nimport gql from 'graphql-tag';\nimport { useState, useEffect } from 'react';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nvar uri = 'http://localhost:3000/api/graphql';\nvar link = new HttpLink({\n  uri: uri,\n  credentials: 'same-origin'\n});\nvar operation = {\n  query: gql(_templateObject())\n};\nexport default function () {\n  var _useState = useState({}),\n      config = _useState[0],\n      updateConfig = _useState[1];\n\n  useEffect(function () {\n    console.log('Hello');\n\n    try {\n      makePromise(execute(link, operation)).then(function (data) {\n        return console.log(\"received data \".concat(JSON.stringify(data, null, 2)));\n      })[\"catch\"](function (error) {\n        return console.log(\"received error \".concat(error));\n      });\n    } catch (error) {} // try {\n    //   const todoData = await API.graphql(graphqlOperation(query));\n    //   updateTodos(todoData.data.listTodos.items);\n    // } catch (err) {\n    //   console.log('error: ', err);\n    // }\n\n  }, []);\n  return config;\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/src/customHooks/useConfigQuery.ts"],"names":["gql","useState","useEffect","execute","makePromise","HttpLink","uri","link","credentials","operation","query","config","updateConfig","console","log","then","data","JSON","stringify","error"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,IAAMC,GAAG,GAAG,mCAAZ;AACA,IAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEC,EAAAA,GAAG,EAAHA,GAAF;AAAOE,EAAAA,WAAW,EAAE;AAApB,CAAb,CAAb;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEV,GAAF;AADW,CAAlB;AAQA,eAAe,YAAY;AAAA,kBACMC,QAAQ,CAAC,EAAD,CADd;AAAA,MAClBU,MADkB;AAAA,MACVC,YADU;;AAGzBV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAI;AACFV,MAAAA,WAAW,CAACD,OAAO,CAACI,IAAD,EAAOE,SAAP,CAAR,CAAX,CACGM,IADH,CACQ,UAACC,IAAD;AAAA,eACJH,OAAO,CAACC,GAAR,yBAA6BG,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA7B,EADI;AAAA,OADR,WAIS,UAACG,KAAD;AAAA,eAAWN,OAAO,CAACC,GAAR,0BAA8BK,KAA9B,EAAX;AAAA,OAJT;AAKD,KAND,CAME,OAAOA,KAAP,EAAc,CAAE,CARJ,CASd;AACA;AACA;AACA;AACA;AACA;;AACD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAOR,MAAP;AACD","sourcesContent":["// import axios from 'axios';\nimport gql from 'graphql-tag';\nimport { useState, useEffect } from 'react';\nimport { QUERY_GLOBAL_CONFIG } from '../../graphql';\nimport { execute, makePromise } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\n\nconst uri = 'http://localhost:3000/api/graphql';\nconst link = new HttpLink({ uri, credentials: 'same-origin' });\n\nconst operation = {\n  query: gql`\n    query {\n      hello\n    }\n  `,\n};\n\nexport default function () {\n  const [config, updateConfig] = useState({});\n\n  useEffect(() => {\n    console.log('Hello');\n    try {\n      makePromise(execute(link, operation))\n        .then((data) =>\n          console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        )\n        .catch((error) => console.log(`received error ${error}`));\n    } catch (error) {}\n    // try {\n    //   const todoData = await API.graphql(graphqlOperation(query));\n    //   updateTodos(todoData.data.listTodos.items);\n    // } catch (err) {\n    //   console.log('error: ', err);\n    // }\n  }, []);\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"module"}