{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation runSetup($success: Boolean) {\\n    runSetup(success: $success) {\\n      success\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar RUN_SETUP = gql(_templateObject());\n\nvar Setup = function Setup() {\n  var _useMutation = useMutation(RUN_SETUP, {\n    onCompleted: function onCompleted() {\n      alert('Okay your ready to rock!');\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      runSetup = _useMutation2[0],\n      runSetupLoading = _useMutation2[1].loading;\n\n  var runFullSetup = function runFullSetup(success) {\n    runSetup({\n      variables: {\n        success: success\n      }\n    });\n  };\n\n  var loadSpinner = function loadSpinner() {\n    return __jsx(\"div\", {\n      className: \"spinner-border text-primary ml-1\",\n      role: \"status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"SetUp Page\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"All right your ready to run your website setup!\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return runFullSetup(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Run SetUp\"), runSetupLoading ? loadSpinner() : '');\n};\n\nexport default Setup;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/setup.tsx"],"names":["React","useMutation","gql","RUN_SETUP","Setup","onCompleted","alert","runSetup","runSetupLoading","loading","runFullSetup","success","variables","loadSpinner"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAIA,IAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAQA,IAAME,KAA2B,GAAG,SAA9BA,KAA8B,GAAM;AAAA,qBACcH,WAAW,CAACE,SAAD,EAAY;AAC3EE,IAAAA,WAAW,EAAE,uBAAM;AACjBC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AAH0E,GAAZ,CADzB;AAAA;AAAA,MACjCC,QADiC;AAAA,MACZC,eADY,oBACrBC,OADqB;;AAOxC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO,EAAI;AAC9BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAED,QAAAA,OAAO,EAAPA;AAAF;AAAb,KAAD,CAAR;AACD,GAFD;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAkD,MAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,EAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMH,YAAY,CAAC,IAAD,CAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAUGF,eAAe,GAAGK,WAAW,EAAd,GAAmB,EAVrC,CADF;AAcD,CAjCD;;AAmCA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport interface SetupProps {}\n\nconst RUN_SETUP = gql`\n  mutation runSetup($success: Boolean) {\n    runSetup(success: $success) {\n      success\n    }\n  }\n`;\n\nconst Setup: React.FC<SetupProps> = () => {\n  const [runSetup, { loading: runSetupLoading }]: any = useMutation(RUN_SETUP, {\n    onCompleted: () => {\n      alert('Okay your ready to rock!');\n    }\n  });\n\n  const runFullSetup = success => {\n    runSetup({ variables: { success } });\n  };\n\n  const loadSpinner = () => {\n    return (\n      <div className=\"spinner-border text-primary ml-1\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>SetUp Page</h1>\n      <p>All right your ready to run your website setup!</p>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => runFullSetup(true)}\n      >\n        Run SetUp\n      </button>\n      {runSetupLoading ? loadSpinner() : ''}\n    </div>\n  );\n};\n\nexport default Setup;\n"]},"metadata":{},"sourceType":"module"}