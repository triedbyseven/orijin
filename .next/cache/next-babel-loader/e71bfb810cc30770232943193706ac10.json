{"ast":null,"code":"const Config = require('../database/models/GlobalConfig');\n\nrunSetup = (_parent, _args, _context) => {\n  // Creation of collection and documents\n  const newConfig = new Config({\n    shipping: 4.25,\n    price: 7\n  });\n  newConfig.save();\n  return {\n    success: _args.success\n  };\n};\n\nupdatePrice = async (_parent, _args, _context) => {\n  try {\n    const {\n      _id,\n      price\n    } = await Config.findOneAndUpdate({\n      _id: '5e815e862e2e6a0bfbf96f1d'\n    }, {\n      price: _args.price\n    }, {\n      new: true\n    });\n    return {\n      _id,\n      price\n    };\n  } catch (error) {\n    return error;\n  }\n};\n\nmodule.exports = {\n  runSetup,\n  updatePrice\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/server/resolvers/Mutation.js"],"names":["Config","require","runSetup","_parent","_args","_context","newConfig","shipping","price","save","success","updatePrice","_id","findOneAndUpdate","new","error","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,iCAAD,CAAtB;;AAEAC,QAAQ,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,KAA8B;AACvC;AACA,QAAMC,SAAS,GAAG,IAAIN,MAAJ,CAAW;AAAEO,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAX,CAAlB;AACAF,EAAAA,SAAS,CAACG,IAAV;AAEA,SAAO;AAAEC,IAAAA,OAAO,EAAEN,KAAK,CAACM;AAAjB,GAAP;AACD,CAND;;AAQAC,WAAW,GAAG,OAAOR,OAAP,EAAgBC,KAAhB,EAAuBC,QAAvB,KAAoC;AAChD,MAAI;AACF,UAAM;AAAEO,MAAAA,GAAF;AAAOJ,MAAAA;AAAP,QAAiB,MAAMR,MAAM,CAACa,gBAAP,CAC3B;AAAED,MAAAA,GAAG,EAAE;AAAP,KAD2B,EAE3B;AAAEJ,MAAAA,KAAK,EAAEJ,KAAK,CAACI;AAAf,KAF2B,EAG3B;AAAEM,MAAAA,GAAG,EAAE;AAAP,KAH2B,CAA7B;AAMA,WAAO;AAAEF,MAAAA,GAAF;AAAOJ,MAAAA;AAAP,KAAP;AACD,GARD,CAQE,OAAOO,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,QADe;AAEfS,EAAAA;AAFe,CAAjB","sourcesContent":["const Config = require('../database/models/GlobalConfig');\n\nrunSetup = (_parent, _args, _context) => {\n  // Creation of collection and documents\n  const newConfig = new Config({ shipping: 4.25, price: 7 });\n  newConfig.save();\n\n  return { success: _args.success };\n};\n\nupdatePrice = async (_parent, _args, _context) => {\n  try {\n    const { _id, price } = await Config.findOneAndUpdate(\n      { _id: '5e815e862e2e6a0bfbf96f1d' },\n      { price: _args.price },\n      { new: true }\n    );\n\n    return { _id, price };\n  } catch (error) {\n    return error;\n  }\n};\n\nmodule.exports = {\n  runSetup,\n  updatePrice\n};\n"]},"metadata":{},"sourceType":"script"}