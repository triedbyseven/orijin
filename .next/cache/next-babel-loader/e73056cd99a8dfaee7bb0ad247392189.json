{"ast":null,"code":"import { gql, ApolloServer } from 'apollo-server-micro';\nconst typeDefs = gql`\n  type Query {\n    hello: String!\n    myGames: [Game]\n  }\n\n  type Game {\n    name: String\n  }\n`;\nconst resolvers = {\n  Query: {\n    hello: (_parent, _args, _context) => {\n      return 'Hello!';\n    },\n    myGames: (_parent, _args, _context) => {\n      return [{\n        name: 'Final Fantasy 7'\n      }, {\n        name: 'World of Warcraft'\n      }];\n    }\n  }\n};\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nconst handler = apolloServer.createHandler({\n  path: '/api/graphql'\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default handler;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/pages/api/graphql.js"],"names":["gql","ApolloServer","typeDefs","resolvers","Query","hello","_parent","_args","_context","myGames","name","apolloServer","handler","createHandler","path","config","api","bodyParser"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,qBAAlC;AAEA,MAAMC,QAAQ,GAAGF,GAAI;;;;;;;;;CAArB;AAWA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,KAA8B;AACnC,aAAO,QAAP;AACD,KAHI;AAILC,IAAAA,OAAO,EAAE,CAACH,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,KAA8B;AACrC,aAAO,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,EAA8B;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAA9B,CAAP;AACD;AANI;AADS,CAAlB;AAWA,MAAMC,YAAY,GAAG,IAAIV,YAAJ,CAAiB;AACpCC,EAAAA,QADoC;AAEpCC,EAAAA;AAFoC,CAAjB,CAArB;AAKA,MAAMS,OAAO,GAAGD,YAAY,CAACE,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeL,OAAf","sourcesContent":["import { gql, ApolloServer } from 'apollo-server-micro';\n\nconst typeDefs = gql`\n  type Query {\n    hello: String!\n    myGames: [Game]\n  }\n\n  type Game {\n    name: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    hello: (_parent, _args, _context) => {\n      return 'Hello!';\n    },\n    myGames: (_parent, _args, _context) => {\n      return [{ name: 'Final Fantasy 7' }, { name: 'World of Warcraft' }];\n    }\n  }\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\n\nconst handler = apolloServer.createHandler({ path: '/api/graphql' });\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}