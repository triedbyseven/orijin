{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/taggedTemplateLiteral\"));\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  query {\\n    getGlobalConfig {\\n      businessName @client\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar QUERY_GLOBAL_CONFIG = (0, _graphqlTag[\"default\"])(_templateObject());\n\ngetGlobalConfig = function getGlobalConfig(_root, variables, _ref) {\n  var cache = _ref.cache,\n      getCacheKey = _ref.getCacheKey;\n\n  var _cache$readQuery = cache.readQuery({\n    query: QUERY_GLOBAL_CONFIG\n  }),\n      item = _cache$readQuery.item;\n\n  console.log(item); // console.log(_root);\n  // console.log(variables);\n  // return cartItems.includes(launch.id);\n  // return { businessName: '', __typename: 'Config' };\n};\n\nmodule.exports = {\n  getGlobalConfig: getGlobalConfig\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Development/Nextjs/landing-page-prodcut-001/client/resolvers/Query.js"],"names":["QUERY_GLOBAL_CONFIG","gql","getGlobalConfig","_root","variables","cache","getCacheKey","readQuery","query","item","console","log","module","exports"],"mappings":";;;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,OAAGC,sBAAH,oBAAzB;;AAQAC,eAAe,GAAG,yBAACC,KAAD,EAAQC,SAAR,QAA8C;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,yBAC7CD,KAAK,CAACE,SAAN,CAAgB;AAAEC,IAAAA,KAAK,EAAER;AAAT,GAAhB,CAD6C;AAAA,MACtDS,IADsD,oBACtDA,IADsD;;AAG9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAH8D,CAI9D;AACA;AACA;AACA;AACD,CARD;;AAUAG,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,eAAe,EAAfA;AADe,CAAjB","sourcesContent":["// const gql = require('graphql-tag');\nimport gql from 'graphql-tag';\n\nconst QUERY_GLOBAL_CONFIG = gql`\n  query {\n    getGlobalConfig {\n      businessName @client\n    }\n  }\n`;\n\ngetGlobalConfig = (_root, variables, { cache, getCacheKey }) => {\n  const { item } = cache.readQuery({ query: QUERY_GLOBAL_CONFIG });\n\n  console.log(item);\n  // console.log(_root);\n  // console.log(variables);\n  // return cartItems.includes(launch.id);\n  // return { businessName: '', __typename: 'Config' };\n};\n\nmodule.exports = {\n  getGlobalConfig,\n};\n"]},"metadata":{},"sourceType":"script"}